(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=1)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return NumberTimer});class NumberTimer{constructor(object){this.elem=object.elem;this.delay=typeof object.delay==="undefined"?1e3:object.delay;this.max=typeof object.max==="undefined"?parseInt(this.elem.innerText):object.max;this.min=typeof object.min==="undefined"?0:object.max;this.type=typeof object.type==="undefined"?"default":object.type;switch(this.type){case"ease-out":this.bezier=[0,0,.58,1];break;case"default":this.bezier=[0];break}this.iteration=0;this.step=Math.round(this.delay/(this.max-this.min));let currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));let interval=setInterval(()=>{this.step=Math.round(this.delay/(this.max-this.min));currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));if(this.iteration<this.max-1){this.iteration++;this.elem.innerText=this.iteration}else{this.iteration++;this.elem.innerText=this.iteration;clearInterval(interval)}},this.step*(this.bezier[currBezier]+1))}}},function(module,exports,__webpack_require__){__webpack_require__(2);module.exports=__webpack_require__(0)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);if(document.querySelector("section.top-block")){let swiper=new Swiper("section.top-block .swiper-container",{effect:"fade",pagination:{el:"section.top-block .custom-pagination",clickable:true,renderBullet(index,className){return`<span class=${className}></span>`}}})}if(document.querySelector("[data-aos]")){AOS.init()}if(document.querySelector("section.info-about-us")){function scrollEvent(e){if(pageYOffset>document.querySelector("section.info-about-us").offsetTop-window.screen.height){document.querySelectorAll("section.info-about-us .count").forEach(elem=>{new _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__["default"]({elem:elem.querySelector("span"),delay:2500,type:"ease-out"})});window.removeEventListener("scroll",scrollEvent)}}window.addEventListener("scroll",scrollEvent)}if(document.querySelector("footer>a")){document.querySelector("footer>a").addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})})}if(document.querySelector("header nav>ul>li.has_child")){document.querySelectorAll("header nav>ul>li.has_child").forEach(elem=>{let elemOffsetLeft=elem.parentNode.offsetLeft+elem.offsetLeft;elem.querySelectorAll("li.has_child>ul").forEach(child=>{let childOffsetLeft=elemOffsetLeft;let elem=child;while(elem.parentNode.classList.contains("has_child")||elem.parentNode.classList.contains("sub_menu")){elem=elem.parentNode;if(elem.parentNode.classList.contains("sub_menu")){childOffsetLeft+=elem.parentNode.offsetWidth}}let childOffsetRight=window.screen.width-childOffsetLeft;if(childOffsetRight-child.offsetWidth<0){child.classList.add("reverse")}})})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
