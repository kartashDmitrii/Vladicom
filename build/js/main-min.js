(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=2)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return NumberTimer});class NumberTimer{constructor(object){this.elem=object.elem;this.delay=typeof object.delay==="undefined"?1e3:object.delay;this.max=typeof object.max==="undefined"?parseInt(this.elem.innerText):object.max;this.min=typeof object.min==="undefined"?0:object.max;this.type=typeof object.type==="undefined"?"default":object.type;switch(this.type){case"ease-out":this.bezier=[0,0,.58,1];break;case"default":this.bezier=[0];break}this.iteration=0;this.step=Math.round(this.delay/(this.max-this.min));let currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));let interval=setInterval(()=>{this.step=Math.round(this.delay/(this.max-this.min));currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));if(this.iteration<this.max-1){this.iteration++;this.elem.innerText=this.iteration}else{this.iteration++;this.elem.innerText=this.iteration;clearInterval(interval)}},this.step*(this.bezier[currBezier]+1))}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return popupFunc});class popupFunc{constructor(button,popup,wrapper=true){this.button=button;this.popup=popup;this.wrapper=wrapper;this.openPopupFunc=this.openPopup.bind(this);this.closePopupFunc=this.closePopup.bind(this);if(Array.isArray(this.button)){this.button.forEach(elem=>{elem.addEventListener("click",this.openPopupFunc)})}else{this.button.addEventListener("click",this.openPopupFunc)}if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))})}else{this.popup.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))}}openPopup(event){document.querySelectorAll(".popup-wrapper>div").forEach(elem=>{elem.classList.remove("active")});document.querySelectorAll(".popup").forEach(elem=>{elem.classList.remove("active")});if(event.target.dataset.stopEvent===undefined){event.preventDefault();if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.add("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}});if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}else{this.popup.classList.add("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}window.addEventListener("mousedown",this.closePopupFunc)}}closePopup(event){if(!event.target.classList.contains("close")){event.stopPropagation()}else{if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.remove("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}})}else{this.popup.classList.remove("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}}window.removeEventListener("mousedown",this.closePopupFunc)}}}},function(module,exports,__webpack_require__){__webpack_require__(3);__webpack_require__(0);module.exports=__webpack_require__(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var _components_popupFunc__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1);if(document.querySelector("section.top-block")){let swiper=new Swiper("section.top-block .swiper-container",{effect:"fade",pagination:{el:"section.top-block .custom-pagination",clickable:true,renderBullet(index,className){return`<span class=${className}></span>`}}})}if(document.querySelector("[data-aos]")){AOS.init()}if(document.querySelector("section.info-about-us")){function scrollEvent(e){if(pageYOffset>document.querySelector("section.info-about-us").offsetTop-window.screen.height){document.querySelectorAll("section.info-about-us .count").forEach(elem=>{new _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__["default"]({elem:elem.querySelector("span"),delay:2500,type:"ease-out"})});window.removeEventListener("scroll",scrollEvent)}}window.addEventListener("scroll",scrollEvent)}if(document.querySelector("footer .container>a")){document.querySelector("footer .container>a").addEventListener("click",e=>{e.preventDefault();window.scrollTo({top:0,behavior:"smooth"})})}if(document.querySelector("header nav>ul>li.has_child")){if(window.screen.width>790){document.querySelectorAll("header nav>ul>li.has_child").forEach(elem=>{let elemOffsetLeft=elem.parentNode.offsetLeft+elem.offsetLeft;elem.querySelectorAll("li.has_child>ul").forEach(child=>{let childOffsetLeft=elemOffsetLeft;let elem=child;while(elem.parentNode.classList.contains("has_child")||elem.parentNode.classList.contains("sub_menu")){elem=elem.parentNode;if(elem.parentNode.classList.contains("sub_menu")){childOffsetLeft+=elem.parentNode.offsetWidth}}let childOffsetRight=window.screen.width-childOffsetLeft;if(childOffsetRight-child.offsetWidth<0){child.classList.add("reverse")}})})}else{document.querySelectorAll("header nav li.has_child").forEach(elem=>{elem.addEventListener("click",function(e){if(e.target===elem){if(elem.parentNode.querySelector(".back-btn")){elem.parentNode.querySelector(".back-btn").remove()}let btn=document.createElement("button");btn.classList.add("back-btn");btn.innerHTML=`Наша продукция`;function btnEvent(parentElem,btnElem){let linksNode=document.querySelector("header nav .links");let leftPos=Math.abs(parseInt(window.getComputedStyle(linksNode).getPropertyValue("left")));leftPos-=linksNode.offsetWidth;linksNode.style.left=`-${leftPos}px`;linksNode.style.height=`${parentElem.closest("ul").scrollHeight}px`;if(parentElem.closest(".sub_menu")){let parentSubMenu=parentElem.closest(".sub_menu");let newBtn=document.createElement("button");newBtn.classList.add("back-btn");newBtn.innerHTML=`Наша продукция`;newBtn.addEventListener("click",function(){btnEvent(parentElem.parentNode.closest(".has_child"),this)});parentSubMenu.prepend(newBtn)}btnElem.remove()}btn.addEventListener("click",function(){btnEvent(elem.closest(".has_child"),this)});elem.querySelector("ul").prepend(btn);let linksNode=document.querySelector("header nav .links");let leftPos=Math.abs(parseInt(window.getComputedStyle(linksNode).getPropertyValue("left")));leftPos+=linksNode.offsetWidth;linksNode.style.left=`-${leftPos}px`;linksNode.style.height=`${elem.querySelector("ul").scrollHeight}px`}},true)})}}if(window.screen.width<=790){document.querySelector("header .burger").addEventListener("click",function(){this.classList.toggle("active");document.querySelector("header .refs").classList.toggle("active")})}if(document.querySelector('[data-popup*="-popup"]')){document.querySelectorAll('[data-popup*="-popup"]').forEach(elem=>{new _components_popupFunc__WEBPACK_IMPORTED_MODULE_1__["default"](elem,document.querySelector(`.popup.${elem.dataset.popup}`))})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
